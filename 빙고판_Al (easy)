#include <stdio.h>
#include <iostream>
#include <time.h>
using namespace std;

enum Al_MODE
{
	AM_EASY=1,
	AM_HARD
};
int main() {

	srand((unsigned int)time(0));
	int iNumber[25] = {};
	int iAlnumber[25] = {};
	//1~25까지 숫자를 넣어준다.
	for (int i = 0; i < 25; ++i) {

		iNumber[i] = i + 1;
		iAlnumber[i] = i + 1;
	}

	//숫자를 섞어준다.
	int iTemp, idx1, idx2;
	for (int i = 0; i < 100; ++i)
	{
		idx1 = rand() % 25;
		idx2 = rand() % 25;

		iTemp = iNumber[idx1];
		iNumber[idx1] = iNumber[idx2];
		iNumber[idx2] = iTemp;

		//AI숫자도 섞어준다
		idx1 = rand() % 25;
		idx2 = rand() % 25;
		iTemp = iAlnumber[idx1];
		iAlnumber[idx1] = iAlnumber[idx2];
		iAlnumber[idx2] = iTemp;
	}

	int iBingo = 0, iAlBingo = 0;
	int iAlMode;

	//난이도 선택
	while (true)
	{
		system("cls");
		cout << "1. Easy" << endl;
		cout << "2. Hard" << endl;
		cout << "Al 모드를 선택하세요: ";
		cin >> iAlMode;

		if (iAlMode >= AM_EASY && iAlMode <= AM_HARD)
			break;
	}


	int iNoneSelect[25] = {};
	int iNoneSelectCount = 0;


	while (true)
	{
		system("cls");
		//숫자를 5 * 5 로 출력한다
		cout << "=============player=============" << endl;


		for (int i = 0; i < 5; ++i) {
			for (int j = 0; j < 5; ++j) {
				if (iNumber[i * 5 + j] == INT_MAX)
					cout << "*\t";
				else
					cout << iNumber[i * 5 + j] << "\t";
			}
			cout << endl;
		}
		cout << "Bingo Line : " << iBingo << endl << endl;

		//홀수가 5이상일경우 게임을 종료한다

		cout << "===============Al ===============" << endl;


		switch (iAlMode) {

		case AM_EASY:
			cout << "Almode : easy" << endl;
			break;
		case AM_HARD:
			cout << "Almode : hard" << endl;
			break;
		}




		for (int i = 0; i < 5; ++i) {

			for (int j = 0; j < 5; ++j) {

				if (iAlnumber[i * 5 + j] == INT_MAX)
					cout << "*\t";
				else
					cout << iAlnumber[i * 5 + j] << "\t";
			}
			cout << endl;
		}
		cout << "AlBingo Line : " << iAlBingo << endl;


		if (iBingo >= 5)
		{
			cout << "Player 승리" << endl;
			break;
		}

		else if (iAlBingo >= 5)
		{
			cout << "Al 승리" << endl;
			break;
		}

		cout << "숫자를 입력하세요 (0: 종료) : ";
		int iInput;
		cin >> iInput;

		if (iInput == 0)
			break;

		else if (iInput < 1 || iInput >25)
			continue;
		//중복입력을 체크하기 위한 변수이다. 기본적으로 중복되었다고
		//하기 위해 true로 잡아주었다.
		bool bAcc = true;
		// 모든 숫자를 차례대로 검사해서 입력한 숫자와 같은 숫자가
		//있는지를 찾아낸다.
		for (int i = 0; i < 25; ++i) {
			// 같은 숫자가 있을 경우
			if (iInput == iNumber[i])
			{//숫자를 찾았을 경우 중복된 숫자가 아니므로
				//bAcc변수를 false로 만들어준다.
				bAcc = false;

				//숫자를 *로 변경하기 위해 특수한 값인 INT_MAX로 해준다.
				iNumber[i] = INT_MAX;
				//더이상 다른 숫자를 찾아볼 필요가 없으므로
				//FOR문을 빠져나간다.
				break;
			}
		}
		// bAcc 변수가 true일 경우 중복된 숫자를 입력해서
		// 숫자 *로 바꾸지 못했으므로 다시 입력받게 continue해준다.
		if (bAcc)
			continue;
		for (int i = 0; i < 25; ++i) {

			if (iAlnumber[i]==iInput)
			{
				iAlnumber[i] = INT_MAX;
				--iNoneSelectCount;
				break;
			}
		}
		//빙고 줄 수를 체크하는 것은 매번 숫자를 입력할 때마다 처음부터
		// 새로 카운트를 할 것이다.그러므로 iBingo 변수를 0으로 매번
		// 초기화하고 새롭게 줄 수를 구해주도록 한다.
		iBingo = 0;
		
		switch (iAlMode) {
		case AM_EASY:
			iNoneSelectCount = 0;
			for (int i = 0; i < 25; ++i) {
				if (iAlnumber[i] != INT_MAX) {
					iNoneSelect[iNoneSelectCount] = iAlnumber[i];
						++iNoneSelectCount;
				}
			}
			iInput = iNoneSelect[rand() % iNoneSelectCount];

				break;
		case AM_HARD:
			break;

		}

		for (int i = 0; i < 25; ++i) {
			if (iNumber[i] == iInput) {
				iNumber[i] = INT_MAX;
				break;
			}
		}
		for (int i = 0; i < 25; ++i) {
			if (iAlnumber[i] == iInput) {
				iAlnumber[i] = INT_MAX;
				break;
			}
		}
		iBingo = 0;
		iAlBingo = 0;

		// 가로, 세로 줄 수를 구해준다.
		int iStar1 = 0, iStar2 = 0;
		int iAlStar1 = 0, iAlstar2 = 0;
		for (int i = 0; i < 5; i++) {
			//한 줄을 체크하기 전에 먼저 0으로 별 개수를 초기화한다.
			iStar1 = iStar2 = 0;
			for (int j = 0; j < 5; ++j) {

				//가로 별 개수를 구해준다
				if (iNumber[i * 5 + j] == INT_MAX)
					++iStar1;
				//세로 별 개수를 구해준다.
				if (iNumber[j * 5 + i] == INT_MAX)
					++iStar2;
				if (iAlnumber[i * 5 + i] == INT_MAX)
					++iAlStar1;
				if (iAlnumber[j * 5 + j] == INT_MAX)
					++iAlstar2;
			}

			//j for문을 빠져나오고 나면 현재 줄의 가로 별 개수가
			// 몇 개인지 iStar1 변수에 들어가게 된다.
			//iStar1의 값이 5이면 한줄이 모두 *이라는 의미이으로
			// 빙고 줄 카운트를 추가해준다
			if (iStar1 == 5)
				++iBingo;
			if (iStar2 == 5)
				++iBingo;
			if (iAlStar1 == 5)
				++iAlBingo;
			if (iAlstar2 == 5)
				++iAlBingo;
		}
		// 왼쪽 상단 -> 오른쪽 하단 대각선 체크
		iStar1 = 0;
		iAlStar1 = 0;
		for (int i = 0; i < 25; i+= 6) {
			if (iNumber[i] == INT_MAX)
				++iStar1;
			if (iAlnumber[i] == INT_MAX)
				++iAlStar1;
		}
		if (iStar1 == 5)
			++iBingo;
		if (iAlStar1 == 5)
			++iAlBingo;
		// 오른쪽 상단 -> 왼쪽 하단 대각선 체크
		iStar1 = 0;
		iAlStar1 = 0;
		for (int i = 4; i <= 20; i += 4) {
			if (iNumber[i] == INT_MAX)
				++iStar1;
			if (iAlnumber[i] == INT_MAX)
			++iAlStar1;
		}
		if (iStar1 == 5)
			++iBingo;
		if (iAlStar1 == 5)
			++iAlBingo;
	}

	return 0;
}
